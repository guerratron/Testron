{
  "name": "Testron",
  "tagline": "Javascript app for questions of 'test' type. ",
  "body": "> -----------------------------------------------------------------------------------------------------\r\n>   'Testron' (API JS) - Javascript app for questions of 'test' type.  \r\n>   Author: Juan José Guerra Haba - <dinertron@gmail.com> - 2016 May  \r\n>   License: Free BSD. & Open GPL v.3. Keep credit, please.  \r\n>   Versión: 1.0.0 BETA   \r\n>   File: testron.js               Main Class: testron.Test.js  \r\n>   \r\n> ----------------------------------------------------------------------------------------------------\r\n\r\n# TESTRON\r\n[![Testron logo](img/testron_logo.png \"Testron GitHub page\")](http://guerratron.github.io/Testron \"Testron page\")\r\nIt is a **Javascript API** to perform questions of *test* type.\r\n[<img src=\"img/testronUI.png\" alt=\"testronUI_img\" style=\"width: 150px;\" />](img/testronUI.png \"Testron UI\")\r\n\r\n## DESCRIPTION\r\nThis can be used as a preparatory method for academic exams. You only need the question file with a valid structure. This file can be JSON format (object or string) or Javascript Object with one declared variable.  \r\nThis rigid structure may contain configuration parameters (the **conf** property) where specify eg the UI containers in which are embed questions and the Marker with information and buttons, or if allowed to select multiple answers or only one, the charset to use, etc.  \r\n\r\n> This *namespace* relies heavily on the utility functions of an internal object implemented in the same file, the **'util'** object, which contains methods and objects statics, they could be used outside the same it, using its *'classpath'*.  \r\n> It also contains the class **Test**, **Test.Marker**, **Test.Question** and **Tests.Question.Answer**, but is more comfortable to use one unique method (**parseTestrons**), which will does all job automaticly:  \r\n> ````javascript  \r\n>  \r\n>  var tests = testron.parseTestrons (test, conf);  \r\n>  \r\n>````\r\n>  \r\n> Here *test* represent a *questions-battery*\r\n\r\n## FEATURES \r\n  1. Fully *OOP*\r\n  2. Customizable by **CSS**\r\n  3. Cross-browser\r\n  4. MVC Philosophy\r\n  5. *HTML5* and *CSS3*.  \r\n  6. Reduction to **minimum code** to use by the user.\r\n\r\n## USAGE\r\nThe **testron** library can be used in several ways:\r\n\r\n  1. By a pure **Javascript object** which respects the necessary structure for the *question-test* (see **STRUCTURE TEST**).\r\n  2. Through a **JSON object**\r\n  3. With a pure **string** with JSON format.\r\n  4. Or by the classical form: With its **constructor**. (less advisable)\r\n    \r\nEg:  \r\n\r\n````javascript    \r\n\r\n  var tests1 = new testron.Test(objTestJSON, \r\n                                {container: \"containerUI\", \r\n                                markerContainer: \"containerMarker\"});\r\n  \r\n```` \r\nOr:  (PREFERABLY)\r\n````javascript  \r\n  \r\n  var tests = testron.parseTestron(objTestronJSON, \r\n                                  {container: \"containerUI\", \r\n                                  markerContainer: \"containerMarker\"});\r\n  \r\n```` \r\n\r\nthen **events** can be used to perform actions conditioned by their **listeners**:\r\n````javascript    \r\n\r\n  testron.onClick(function(answer, marker){\r\n      alert(\"CLICK: \" + answer.parent.num + \r\n            \"[\" + answer.name + \"] ). \" + marker.score);\r\n      contMarker.style.visibility = \"hidden\";\r\n  });\r\n  testron.onFinished(function(test){\r\n      alert(\"FINISHED TEST: \" + test.id);\r\n      contMarker.style.visibility = \"visible\";\r\n  });\r\n  \r\n```` \r\n\r\n> Of course you must be loaded before the **script** in the HTML header. (*header* secction)  \r\n> ````HTML\r\n>\r\n>  <script type=\"text/javascript\" src=\"testron.js\"></script>\r\n>  \r\n>````\r\n\r\n## Public API\r\n - Constructor\r\n````javascript\r\n  testron.Test (test-questions object);\r\n````\r\n - Getters \r\n````javascript\r\n  getTests ();\r\n  addTest (test-questions object);\r\n  removeTest (test-questions object);\r\n  resetTests ();\r\n````\r\n - OTHERS METHODS\r\n````javascript\r\n  parseTestrons (tests-questions object);\r\n  toJSON ();\r\n````\r\n - INNER OBJECTS\r\n   - util\r\n````javascript\r\n  toPrecision (floatNumber, precision);\r\n  toDecimals (floatNumber, precision);\r\n  toDigits (num, digits, sign);\r\n  icos [icons object]\r\n  addEvent (elem, eventType, handler);\r\n  ... some listeners ...\r\n````\r\n - EVENTS\r\n````javascript\r\n  onOk (function listenerOk (answer, marker) { ... });\r\n  onFail (function listenerFail (answer, marker) { ... });\r\n  onClick (function listenerClick (answer, marker) { ... });\r\n  onNext (function listenerNext (question, marker) { ... });\r\n  onMarker (function listenerUpdateMarker (marker) { ... });\r\n  onFinished (function listenerFinished (tests) { ... });\r\n````\r\n\r\n## STRUCTURE <small>for the 'question-test' object</small>\r\nThis structure is rigid and must be as follows eg:\r\n````javascript\r\n{\r\n    testron: [\r\n        {\r\n            conf: {className: \"test-80\", container: \"container1\", \r\n                   markerContainer: \"container2\", stopOnSuccess: true, \r\n                   digits: 2, precision: 2},\r\n            questions: [\r\n                {\r\n                    conf: {num: 1, solution: 2, txt: \"Question 1 ???\"},\r\n                    answers: [\r\n                        {name: \"A\", txt: \"Answer A\"},\r\n                        {name: \"B\", txt: \"Answer B\"},\r\n                        {name: \"C\", txt: \"Answer C\"}\r\n                    ]\r\n                },\r\n                {\r\n                    conf: {num: 2, solution: 3, txt: \"Question 2 ???\"},\r\n                    answers: [\r\n                        {name: \"A\", txt: \"Answer A\"},\r\n                        {name: \"B\", txt: \"Answer B\"},\r\n                        {name: \"C\", txt: \"Answer C\"}\r\n                    ]\r\n                },\r\n                {\r\n                    conf: {num: 3, solution: 3, txt: \"Question 3 ???\"},\r\n                    answers: [\r\n                        {name: \"A\", txt: \"Answer A\"},\r\n                        {name: \"B\", txt: \"Answer B\"},\r\n                        {name: \"C\", txt: \"Answer C\"}\r\n                    ]\r\n                },\r\n                {\r\n                    conf: {num: 4, solution: 1, txt: \"Question 4 ???\"},\r\n                    answers: [\r\n                        {name: \"A\", txt: \"Answer A\"},\r\n                        {name: \"B\", txt: \"Answer B\"},\r\n                        {name: \"C\", txt: \"Answer C\"}\r\n                    ]\r\n                } // END QUESTION\r\n            ] // END QUESTIONS\r\n        } // END TEST\r\n        //, ... OTHERs TESTS\r\n    ] // END TESTS\r\n}\r\n````\r\n\r\n## CONFIGURATION\r\nThis options for configuration may be included in **conf** property, these are:\r\n  \r\n  - **className**       : {string} if you wish a specific class name for container \r\n  - **container**       : {string} the id *DOM* element which embed the UI\r\n  - **markerContainer** : {string} equal for **Marker** (It advised in *fixed* position)\r\n  - **remove**          : {boolean} cleans the *container* before insert the content\r\n  - **markerRemove**    : {boolean} equal for **Marker** container\r\n  - **stopOnSuccess**   : {boolean} allows to select multiple answers until find the correct\r\n  - **digits**          : {number} digits to show in *Marker*\r\n  - **precision**       : {number} accuracy of results\r\n\r\n### Authoring\r\nCreated and developed entirely by Juan Jose Guerra Haba. &lt;dinertron@gmail.com&gt;    \r\nCopyright 2016 &copy; [GuerraTron](&#x6d;&#97;&#105;&#108;&#116;&#x6f;&#x3a;&#100;&#105;&#110;&#x65;&#x72;&#x74;&#114;&#x6f;&#110;&#64;&#x67;&#109;&#x61;&#x69;&#x6c;&#46;&#99;&#x6f;&#x6d; \"author\") \r\nLicense GPL v3\r\n\r\n### Developing &amp; Tools\r\nCreated with [Nodeclipse](https://github.com/Nodeclipse/nodeclipse-1)\r\n ([Eclipse Marketplace](http://marketplace.eclipse.org/content/nodeclipse), [site](http://www.nodeclipse.org))   \r\nNodeclipse is free open-source project that grows with your contributions.  \r\nDebug by Firefox + Firebug\r\nAdditional editing and cleaning with Notepad++\r\n\r\n> I hope It can be useful to someone as it has been for me. In this case it would be appreciated email commenting use or suggestions for future improvements.  \r\n> ¡ PLEASE, KEEP CREDITS AND LINKS, THANKS !\r\n\r\n    ... and as George Lucas would say: may the force be with you!",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}